// var声明及变量提升机制，如果声明时没有初始化则会返回undefined
// 块级声明 let、const  词法作用域   最佳实践:默认使用const
// 执行流离开该块，变量就会立刻被销毁
// 禁止重声明  但是在当前作用域内嵌另一个作用域，便可在内嵌的作用域中用let声明同名变量
// const声明不允许修改绑定，但允许修改值即声明对象后可以修改该对象的属性值
// 临时死区（TDZ）：let和const声明的变量在声明前访问会报错
循环中的块级作用域绑定
// let和const都会每次迭代时创建新的绑定，从而使循环体内创建的函数可以访问到相应迭代的值